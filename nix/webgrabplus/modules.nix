{
  inputs,
  cell,
}: {
  default = {
    config,
    lib,
    pkgs,
    ...
  }:
    with lib; let
      cfg = config.services.webgrabplus;
      #       stylesheetHeader = ''
      #         <?xml version="1.0"?>
      #       '';
      #
      #       stylesheetRootTag = ''
      #     <xsl:template match='/'>
      #       <xsl:comment> Generated by Home Manager. </xsl:comment>
      #       <settings>
      #         <xsl:apply-templates/>
      #       </setting>
      #     </xsl:template>
      #       '';
      #       stylesheetTags = ''
      # <xsl:template match="attr[attrs]">
      #       <xsl:variable name="elementName" select="@name"/>
      #       <xsl:element name="{$elementName}">
      #         <xsl:apply-templates select="attrs" />
      #       </xsl:element>
      #     </xsl:template>
      #      <xsl:template match="attr[not(attrs|list)]">
      #       <xsl:variable name="elementName" select="@name"/>
      #       <xsl:element name="{$elementName}">
      #       <xsl:value-of select="*/@value" />
      #       </xsl:element>
      #     </xsl:template>
      #   '';
      #
      #       attrsetToXml = attrs: name: stylesheet:
      #         pkgs.runCommand name {
      #           # Package splicing for libxslt does not work correctly leading to errors
      #           # when cross-compiling. Use the version from buildPackages explicitly to
      #           # fix this.
      #           nativeBuildInputs = [ pkgs.buildPackages.libxslt.bin ];
      #           xml = builtins.toXML attrs;
      #           passAsFile = [ "xml" ];
      #         } ''
      #           xsltproc ${stylesheet} - < "$xmlPath" > "$out"
      #         '';
      #
      #       attrsetToConfigXml = attrs: name:
      #         let
      #           stylesheet = builtins.toFile "stylesheet.xsl" ''
      #             ${stylesheetHeader}
      #             ${stylesheetRootTag}
      #             ${stylesheetTags}
      #           '';
      #         in attrsetToXml attrs name stylesheet;
      #
      #       configFile = attrsetToXml cfg.config "webgrabplus-config.xml";
    in {
      options = {
        services.webgrabplus = {
          enable = mkEnableOption (lib.mdDoc "Enable WebGrab+Plus EPG grabber.");

          package = mkOption {
            type = types.package;
            default = pkgs.webgrabplus;
            defaultText = literalExpression "pkgs.webgrabplus";
            description = lib.mdDoc "The WebGrab+Plus package to use.";
          };

          dataDir = mkOption {
            type = types.path;
            default = "/var/lib/webgrabplus";
            description = lib.mdDoc ''
              The path where state and data files are located.
            '';
          };

          frequency = mkOption {
            type = types.str;
            default = "*-*-* 01:15:00";
          };

          syncSiteIniPack = mkOption {
            type = types.bool;
            default = true;
            description = lib.mdDoc ''
              Whether to enable WebGrab+Plus synchronization service.
            '';
          };

          configFile = mkOption {
            type = types.path;
          };

          rexConfigFile = mkOption {
            type = types.nullOr types.path;
            default = null;
          };

          preProcessScript = mkOption {
            type = types.nullOr types.str;
            default = ''
              rm -f ${cfg.dataDir}/WebGrab++.config.xml
              cp --no-preserve=mode ${cfg.configFile} ${cfg.dataDir}/WebGrab++.config.xml
            '';
          };
        };
      };

      config = mkIf cfg.enable {
        users.users.webgrabplus = {
          description = "WebGrab+Plus Service user";
          home = cfg.dataDir;
          createHome = true;
          homeMode = "0750";
          isSystemUser = true;
          group = "webgrabplus";
        };
        users.groups.webgrabplus = {};

        systemd.services.webgrabplus = {
          serviceConfig = {
            ExecStart = "${lib.getBin cfg.package}/bin/WebGrab+Plus \"${cfg.dataDir}\"";
            User = "webgrabplus";
            Group = "webgrabplus";
            WorkingDirectory = cfg.dataDir;
            Type = "oneshot";
          };
          preStart = ''
            ${cfg.preProcessScript}

            ${optionalString (cfg.rexConfigFile != null) ''
              mkdir -p ${cfg.dataDir}/rex
              rm -f ${cfg.dataDir}/rex/rex.config.xml
              cp --no-preserve=mode ${cfg.rexConfigFile} ${cfg.dataDir}/rex/rex.config.xml
            ''}

            ${optionalString cfg.syncSiteIniPack ''
              ${pkgs.gitMinimal}/bin/git clone \
                https://github.com/SilentButeo2/webgrabplus-siteinipack.git \
                siteinipack 2> /dev/null || ${pkgs.gitMinimal}/bin/git -C siteinipack pull

              ln -sf siteinipack/siteini.pack siteini.pack
            ''}
          '';
          startAt = "${cfg.frequency}";
        };
      };
    };
}
